<style>

.bar.positive {
  fill: steelblue;
}

.bar.positive:hover {
  fill: dodgerblue;
}

.bar.negative {
  fill: brown;
}

.bar.negative:hover {
  fill: indianred;
}

.axis text {
  font: 10px sans-serif;
}

.axis path,
.axis line {
  fill: none;
  stroke: #000;
  shape-rendering: crispEdges;
}

.grid .tick {
    stroke: lightgrey;
    opacity: 0.7;
}
.grid path {
      stroke-width: 0;
}

.d3-tip {
  line-height: 1;
  font-weight: bold;
  padding: 12px;
  background: rgba(0, 0, 0, 0.8);
  color: #fff;
  border-radius: 2px;
}

/* Creates a small triangle extender for the tooltip */
.d3-tip:after {
  box-sizing: border-box;
  display: inline;
  font-size: 10px;
  width: 100%;
  line-height: 1;
  color: rgba(0, 0, 0, 0.8);
  content: "\25BC";
  position: absolute;
  text-align: center;
}

/* Style northward tooltips differently */
.d3-tip.n:after {
  margin: -1px 0 0 0;
  top: 100%;
  left: 0;
}

</style>
<script>
document.addEventListener('DOMContentLoaded', function() {

  var margin = {top: 30, right: 10, bottom: 10, left: 10},
      width = 960 - margin.left - margin.right,
      height = 500 - margin.top - margin.bottom;

  var x = d3.scale.linear()
      .range([0, width])

  var y = d3.scale.ordinal()
      .rangeRoundBands([0, height], .2);

  window.xAxis = d3.svg.axis()
      .scale(x)
      .orient("top");

  window.tip = d3.tip()
    .attr('class', 'd3-tip')
    .offset([-10, 0])
    .html(function(d) {
      return "<strong>"+ d.month +":</strong> <span style='color:red'>" + d.net + "</span>";
    });

  window.svg = d3.select("#plot").append("svg")
      .attr("width", width + margin.left + margin.right)
      .attr("height", height + margin.top + margin.bottom)
    .append("g")
      .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

  svg.call(tip);


function make_x_axis() {        
    return d3.svg.axis()
        .scale(x)
         .orient("bottom")
         .ticks(5)
}

function make_y_axis() {        
    return d3.svg.axis()
        .scale(y)
        .orient("left")
        .ticks(5)
}

  d3.csv("<%= monthly_debt_report_path(format: "csv") %>", type, function(error, data) {
    x.domain(d3.extent(data, function(d) { return d.net; })).nice();
    y.domain(data.map(function(d) { return d.month; }));


svg.append("g")         
        .attr("class", "grid")
        .attr("transform", "translate(0," + height + ")")
        .call(make_x_axis()
            .tickSize(-height, 0, 0)
            .tickFormat("")
        )

    svg.append("g")         
        .attr("class", "grid")
        .call(make_y_axis()
            .tickSize(-width, 0, 0)
            .tickFormat("")
        )


    svg.selectAll(".bar")
        .data(data)
      .enter().append("rect")
        .attr("class", function(d) { return d.net < 0 ? "bar negative" : "bar positive"; })
        .attr("x", function(d) { return x(Math.min(0, d.net)); })
        .attr("y", function(d) { return y(d.month); })
        .attr("width", function(d) { return Math.abs(x(d.net) - x(0)); })
        .attr("height", y.rangeBand())
        .on("mouseover", tip.show)
        .on("mouseout", tip.hide);

    svg.append("g")
        .attr("class", "x axis")
        .call(xAxis);

    svg.append("g")
        .attr("class", "y axis")
      .append("line")
        .attr("x1", x(0))
        .attr("x2", x(0))
        .attr("y2", height);
  });

  function type(d) {
    d.net = +d.net;
    return d;
  }
}, false);
</script>

<div id="plot" style="text-align: center"></div>