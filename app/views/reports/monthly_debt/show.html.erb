<style>
.axis path,
.axis line {
  fill: none;
  stroke: #000;
  shape-rendering: crispEdges;
}

.axis text {
  pointer-events: none;
  text-shadow: 0px 0px 5px #fff;
}

.grid .tick {
    stroke: lightgrey;
    opacity: 0.7;
}
.grid path {
      stroke-width: 0;
}

.bar.positive {
  fill: steelblue;
}

.bar.positive:hover {
  fill: dodgerblue;
}

.bar.negative {
  fill: brown;
}

.bar.negative:hover {
  fill: indianred;
}

.d3-tip {
  line-height: 1;
  font-weight: bold;
  padding: 12px;
  background: rgba(0, 0, 0, 0.8);
  color: #fff;
  border-radius: 2px;
}

/* Creates a small triangle extender for the tooltip */
.d3-tip:after {
  box-sizing: border-box;
  display: inline;
  font-size: 10px;
  width: 100%;
  line-height: 1;
  color: rgba(0, 0, 0, 0.8);
  content: "\25BC";
  position: absolute;
  text-align: center;
}

/* Style northward tooltips differently */
.d3-tip.n:after {
  margin: -1px 0 0 0;
  top: 100%;
  left: 0;
}
</style>
<script>

var margin = {top: 50, right: 50, bottom: 50, left: 75};
var width = 960 - margin.left - margin.right;
var height = 500 - margin.top - margin.bottom;

function make_x_axis() {        
  return d3.svg.axis()
               .scale(xScale)
               .orient("bottom")
               .ticks(6)
}

function make_y_axis() {        
  return d3.svg.axis()
               .scale(yScale)
               .orient("left")
               .ticks(10)
}

function render(data) {
  xScale.domain(d3.extent(data, function(d) { return d.month; }));
  yScale.domain(d3.extent(data, function(d) { return d.net; }).reverse()).nice();

  svg.append("g")         
     .attr("class", "grid")
     .attr("transform", "translate(0," + height + ")")
     .call(make_x_axis().tickSize(-height, 0, 0).tickFormat(""))

  svg.append("g")         
     .attr("class", "grid")
     .call(make_y_axis().tickSize(-width, 0, 0).tickFormat(""))

  svg.selectAll(".bar")
      .data(data)
     .enter().append("rect")
      .attr("class", function(d) { return d.net < 0 ? "bar negative" : "bar positive"; })
      .attr("x", function(d) { return xScale(d.month) - 20; })
      .attr("y", function(d) { return yScale(Math.max(0, d.net)); })
      .attr("width", 40)
      .attr("height", function(d) { return Math.abs(yScale(d.net) - yScale(0)); })
      .on("mouseover", tip.show)
      .on("mouseout", tip.hide);

  svg.append("g")
     .attr("class", "x axis")
     .attr("transform", "translate(0," + yScale(0) + ")")
     .call(xAxis);

  svg.append("g")
     .attr("class", "y axis")
     .call(yAxis);
}

function main() {
  window.svg = d3.select("#plot")
                 .append("svg")
                 .attr("width", width + margin.left + margin.right)
                 .attr("height", height + margin.top + margin.bottom)
                 .append("g")
                 .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

  window.xScale = d3.time.scale()
                         .range([0, width]);

  window.yScale = d3.scale.linear()
                          .range([0, height]);

  window.xAxis = d3.svg.axis()
                       .scale(xScale)
                       .orient("bottom")
                       .ticks(d3.time.month, 1)
                       .tickFormat(d3.time.format("%b"));

  window.yAxis = d3.svg.axis()
                       .scale(yScale)
                       .orient("left")
                       .tickFormat(function(x) { return accounting.formatMoney(x); });

  window.tip = d3.tip()
                 .attr('class', 'd3-tip')
                 .offset([-10, 0])
                 .html(function(d) {
                   return "<strong>"+ d3.time.format("%b %Y")(d.month) +":</strong> <span style='color:red'>" + accounting.formatMoney(d.net) + "</span>";
                 });

  svg.call(tip);

  d3.csv("<%= monthly_debt_report_path(format: "csv") %>")
    .row(function(d) { return {month: new Date(Number(d.month)), net: Number(d.net)}; }) 
    .get(function(error, data) { render(data); });
}

document.addEventListener("DOMContentLoaded", main, false);
</script>
<div id="plot" style="text-align: center"></div>